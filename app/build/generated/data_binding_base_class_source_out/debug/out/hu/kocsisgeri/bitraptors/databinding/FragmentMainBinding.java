// Generated by view binder compiler. Do not edit!
package hu.kocsisgeri.bitraptors.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import hu.kocsisgeri.bitraptors.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ConstraintLayout deadLayout;

  @NonNull
  public final TextView deadText;

  @NonNull
  public final CoordinatorLayout main;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final CircularProgressIndicator progressCircle;

  @NonNull
  public final ConstraintLayout vaccinatedLayout;

  @NonNull
  public final TextView vaccinatedText;

  @NonNull
  public final RecyclerView viewRC;

  private FragmentMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ConstraintLayout deadLayout,
      @NonNull TextView deadText, @NonNull CoordinatorLayout main,
      @NonNull LinearProgressIndicator progressBar,
      @NonNull CircularProgressIndicator progressCircle, @NonNull ConstraintLayout vaccinatedLayout,
      @NonNull TextView vaccinatedText, @NonNull RecyclerView viewRC) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.deadLayout = deadLayout;
    this.deadText = deadText;
    this.main = main;
    this.progressBar = progressBar;
    this.progressCircle = progressCircle;
    this.vaccinatedLayout = vaccinatedLayout;
    this.vaccinatedText = vaccinatedText;
    this.viewRC = viewRC;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.deadLayout;
      ConstraintLayout deadLayout = ViewBindings.findChildViewById(rootView, id);
      if (deadLayout == null) {
        break missingId;
      }

      id = R.id.dead_text;
      TextView deadText = ViewBindings.findChildViewById(rootView, id);
      if (deadText == null) {
        break missingId;
      }

      CoordinatorLayout main = (CoordinatorLayout) rootView;

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressCircle;
      CircularProgressIndicator progressCircle = ViewBindings.findChildViewById(rootView, id);
      if (progressCircle == null) {
        break missingId;
      }

      id = R.id.vaccinatedLayout;
      ConstraintLayout vaccinatedLayout = ViewBindings.findChildViewById(rootView, id);
      if (vaccinatedLayout == null) {
        break missingId;
      }

      id = R.id.vaccinated_text;
      TextView vaccinatedText = ViewBindings.findChildViewById(rootView, id);
      if (vaccinatedText == null) {
        break missingId;
      }

      id = R.id.viewRC;
      RecyclerView viewRC = ViewBindings.findChildViewById(rootView, id);
      if (viewRC == null) {
        break missingId;
      }

      return new FragmentMainBinding((CoordinatorLayout) rootView, appBarLayout, deadLayout,
          deadText, main, progressBar, progressCircle, vaccinatedLayout, vaccinatedText, viewRC);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
